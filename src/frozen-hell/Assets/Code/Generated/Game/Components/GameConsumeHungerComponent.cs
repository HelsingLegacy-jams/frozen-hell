//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherConsumeHunger;

    public static Entitas.IMatcher<GameEntity> ConsumeHunger {
        get {
            if (_matcherConsumeHunger == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ConsumeHunger);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherConsumeHunger = matcher;
            }

            return _matcherConsumeHunger;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Interactors.ConsumeHunger consumeHunger { get { return (Code.Gameplay.Features.Interactors.ConsumeHunger)GetComponent(GameComponentsLookup.ConsumeHunger); } }
    public float ConsumeHunger { get { return consumeHunger.Value; } }
    public bool hasConsumeHunger { get { return HasComponent(GameComponentsLookup.ConsumeHunger); } }

    public GameEntity AddConsumeHunger(float newValue) {
        var index = GameComponentsLookup.ConsumeHunger;
        var component = (Code.Gameplay.Features.Interactors.ConsumeHunger)CreateComponent(index, typeof(Code.Gameplay.Features.Interactors.ConsumeHunger));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceConsumeHunger(float newValue) {
        var index = GameComponentsLookup.ConsumeHunger;
        var component = (Code.Gameplay.Features.Interactors.ConsumeHunger)CreateComponent(index, typeof(Code.Gameplay.Features.Interactors.ConsumeHunger));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveConsumeHunger() {
        RemoveComponent(GameComponentsLookup.ConsumeHunger);
        return this;
    }
}
